include gro

set ( "dt", 0.1 );

FOLLOWER := 0;
CANDIDATE := 1;
LEADER := 2;

k1 := 0.001;	// wave emit rate
k2 := 0.00001; 
tr := 6;	// refraction period
td := 3.3;	// detection time

se := 100;	// signal emit magnitude
sd := 0.1;	// signal detect threshold for wave
st := 0.2;	// signal detect threshold for edge detection

ahl := signal (1,1); // This command declares a new signal

// 
// The edge detection specification
// 
program edge(k1,tr,td) := { 

  rfp := 0;
	gfp := 0; 
  r := [ t := 0, state := FOLLOWER];

  rate(k1) & r.state = FOLLOWER : { // randomly become candidate
		r.state := CANDIDATE,
		set ( "ecoli_growth_rate", 0 ), // dont let candidates divide 
		rfp := 1000, // debug
  }

  r.t > 10 & r.state = CANDIDATE : { 
		emit_signal ( ahl, se ),
		r.t := 0
  }
	
	r.t > tr & get_signal(ahl) > sd & r.state = FOLLOWER : {
		emit_signal(ahl, se),
		r.t := 0
	}
	
  r.state = CANDIDATE & get_signal(ahl) > 0 & r.t > 10: {
		r.state := FOLLOWER,
		set ( "ecoli_growth_rate", 100 ),
		rfp := 0
	}

	//r.state = CANDIDATE & get_signal(ahl) = 0 & r.t > 15 : {
		//r.state := LEADER,
		//gfp := 1000
	//}

  true : { // for timing purposes
    r.t := r.t + dt
  }

};

// associate the program with a cell
ecoli ( [ x:= 0, y:= 0 ], program edge(k1, tr, td) );

